{"ast":null,"code":"// \"use client\";\n\n// import { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../contexts/AuthContext\";\n// import { useToast } from \"../../contexts/ToastContext\";\n// import axios from \"../../utils/axios-utils\";\n// import \"./FeedbackPages.css\";\n\n// const FeedbacksPage = () => {\n//   const [feedbacks, setFeedbacks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const { currentUser, isAuthenticated } = useAuth();\n//   const { showToast } = useToast();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate(\"/login\"); // NEW: Redirect if not authenticated\n//       return;\n//     }\n//     fetchFeedbacks();\n//   }, [isAuthenticated, navigate]);\n\n//   const fetchFeedbacks = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await axios.get(\"/api/feedbacks/user\");\n//       setFeedbacks(response.data.data);\n//     } catch (error) {\n//       console.error(\"Error fetching feedbacks:\", error);\n//       const errorMessage = error.response?.data?.message || \"Failed to load feedbacks\";\n//       showToast(\"error\", errorMessage);\n//       if (error.response?.status === 401 || error.response?.status === 403) {\n//         navigate(\"/login\"); // NEW: Redirect on auth error\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleCreateFeedback = () => {\n//     navigate(\"/feedbacks/create\");\n//   };\n\n//   const handleEditFeedback = (id) => {\n//     navigate(`/feedbacks/${id}/edit`);\n//   };\n\n//   const handleDeleteFeedback = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this feedback?\")) {\n//       try {\n//         await axios.delete(`/api/feedbacks/${id}`);\n//         showToast(\"success\", \"Feedback deleted successfully\");\n//         fetchFeedbacks();\n//       } catch (error) {\n//         console.error(\"Error deleting feedback:\", error);\n//         showToast(\"error\", error.response?.data?.message || \"Failed to delete feedback\");\n//       }\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString);\n//     return date.toLocaleDateString(\"en-US\", {\n//       year: \"numeric\",\n//       month: \"short\",\n//       day: \"numeric\",\n//     });\n//   };\n\n//   const renderStars = (rating) => {\n//     return Array(5)\n//       .fill(0)\n//       .map((_, index) => (\n//         <i\n//           key={index}\n//           className=\"material-icons star-icon\"\n//           style={{ color: index < rating ? \"#ffc107\" : \"#ddd\" }}\n//         >\n//           star\n//         </i>\n//       ));\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading feedbacks...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"feedback-container\">\n//       <div className=\"feedback-header\">\n//         <h1 className=\"feedback-title\">My Feedbacks</h1>\n//         <button className=\"create-feedback-btn\" onClick={handleCreateFeedback}>\n//           <i className=\"material-icons\">add</i>\n//           <span>Add Feedback</span>\n//         </button>\n//       </div>\n\n//       {feedbacks.length === 0 ? (\n//         <div className=\"empty-feedback\">\n//           <i className=\"material-icons empty-feedback-icon\">feedback</i>\n//           <p className=\"empty-feedback-text\">You haven't provided any feedback yet.</p>\n//           <button className=\"create-feedback-btn\" onClick={handleCreateFeedback}>\n//             <i className=\"material-icons\">add</i>\n//             <span>Add Your First Feedback</span>\n//           </button>\n//         </div>\n//       ) : (\n//         <div className=\"feedback-list\">\n//           {feedbacks.map((feedback) => (\n//             <div key={feedback.id} className=\"feedback-card\">\n//               <div className=\"feedback-card-header\">\n//                 <h2 className=\"feedback-card-title\">{feedback.title}</h2>\n//                 <div className=\"feedback-card-rating\">{renderStars(feedback.rating)}</div>\n//               </div>\n//               <p className=\"feedback-card-content\">{feedback.content}</p>\n//               <div className=\"feedback-card-footer\">\n//                 <div className=\"feedback-card-date\">\n//                   {formatDate(feedback.createdAt)}\n//                   {feedback.updatedAt !== feedback.createdAt && \" (edited)\"}\n//                 </div>\n//                 <div className=\"feedback-card-actions\">\n//                   <button\n//                     className=\"feedback-action-btn edit-btn\"\n//                     onClick={() => handleEditFeedback(feedback.id)}\n//                   >\n//                     <i className=\"material-icons\">edit</i>\n//                   </button>\n//                   <button\n//                     className=\"feedback-action-btn delete-btn\"\n//                     onClick={() => handleDeleteFeedback(feedback.id)}\n//                   >\n//                     <i className=\"material-icons\">delete</i>\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FeedbacksPage;","map":{"version":3,"names":[],"sources":["C:/Users/USER/Downloads/PAF-Project-main/PAF-Project-main/frontend/src/pages/feedback/FeedbacksPage.js"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { useAuth } from \"../../contexts/AuthContext\";\r\n// import { useToast } from \"../../contexts/ToastContext\";\r\n// import axios from \"../../utils/axios-utils\";\r\n// import \"./FeedbackPages.css\";\r\n\r\n// const FeedbacksPage = () => {\r\n//   const [feedbacks, setFeedbacks] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const { currentUser, isAuthenticated } = useAuth();\r\n//   const { showToast } = useToast();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (!isAuthenticated) {\r\n//       navigate(\"/login\"); // NEW: Redirect if not authenticated\r\n//       return;\r\n//     }\r\n//     fetchFeedbacks();\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   const fetchFeedbacks = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.get(\"/api/feedbacks/user\");\r\n//       setFeedbacks(response.data.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching feedbacks:\", error);\r\n//       const errorMessage = error.response?.data?.message || \"Failed to load feedbacks\";\r\n//       showToast(\"error\", errorMessage);\r\n//       if (error.response?.status === 401 || error.response?.status === 403) {\r\n//         navigate(\"/login\"); // NEW: Redirect on auth error\r\n//       }\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateFeedback = () => {\r\n//     navigate(\"/feedbacks/create\");\r\n//   };\r\n\r\n//   const handleEditFeedback = (id) => {\r\n//     navigate(`/feedbacks/${id}/edit`);\r\n//   };\r\n\r\n//   const handleDeleteFeedback = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this feedback?\")) {\r\n//       try {\r\n//         await axios.delete(`/api/feedbacks/${id}`);\r\n//         showToast(\"success\", \"Feedback deleted successfully\");\r\n//         fetchFeedbacks();\r\n//       } catch (error) {\r\n//         console.error(\"Error deleting feedback:\", error);\r\n//         showToast(\"error\", error.response?.data?.message || \"Failed to delete feedback\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     const date = new Date(dateString);\r\n//     return date.toLocaleDateString(\"en-US\", {\r\n//       year: \"numeric\",\r\n//       month: \"short\",\r\n//       day: \"numeric\",\r\n//     });\r\n//   };\r\n\r\n//   const renderStars = (rating) => {\r\n//     return Array(5)\r\n//       .fill(0)\r\n//       .map((_, index) => (\r\n//         <i\r\n//           key={index}\r\n//           className=\"material-icons star-icon\"\r\n//           style={{ color: index < rating ? \"#ffc107\" : \"#ddd\" }}\r\n//         >\r\n//           star\r\n//         </i>\r\n//       ));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"loading-container\">\r\n//         <div className=\"loading-spinner\"></div>\r\n//         <p>Loading feedbacks...</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"feedback-container\">\r\n//       <div className=\"feedback-header\">\r\n//         <h1 className=\"feedback-title\">My Feedbacks</h1>\r\n//         <button className=\"create-feedback-btn\" onClick={handleCreateFeedback}>\r\n//           <i className=\"material-icons\">add</i>\r\n//           <span>Add Feedback</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {feedbacks.length === 0 ? (\r\n//         <div className=\"empty-feedback\">\r\n//           <i className=\"material-icons empty-feedback-icon\">feedback</i>\r\n//           <p className=\"empty-feedback-text\">You haven't provided any feedback yet.</p>\r\n//           <button className=\"create-feedback-btn\" onClick={handleCreateFeedback}>\r\n//             <i className=\"material-icons\">add</i>\r\n//             <span>Add Your First Feedback</span>\r\n//           </button>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"feedback-list\">\r\n//           {feedbacks.map((feedback) => (\r\n//             <div key={feedback.id} className=\"feedback-card\">\r\n//               <div className=\"feedback-card-header\">\r\n//                 <h2 className=\"feedback-card-title\">{feedback.title}</h2>\r\n//                 <div className=\"feedback-card-rating\">{renderStars(feedback.rating)}</div>\r\n//               </div>\r\n//               <p className=\"feedback-card-content\">{feedback.content}</p>\r\n//               <div className=\"feedback-card-footer\">\r\n//                 <div className=\"feedback-card-date\">\r\n//                   {formatDate(feedback.createdAt)}\r\n//                   {feedback.updatedAt !== feedback.createdAt && \" (edited)\"}\r\n//                 </div>\r\n//                 <div className=\"feedback-card-actions\">\r\n//                   <button\r\n//                     className=\"feedback-action-btn edit-btn\"\r\n//                     onClick={() => handleEditFeedback(feedback.id)}\r\n//                   >\r\n//                     <i className=\"material-icons\">edit</i>\r\n//                   </button>\r\n//                   <button\r\n//                     className=\"feedback-action-btn delete-btn\"\r\n//                     onClick={() => handleDeleteFeedback(feedback.id)}\r\n//                   >\r\n//                     <i className=\"material-icons\">delete</i>\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FeedbacksPage;\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}