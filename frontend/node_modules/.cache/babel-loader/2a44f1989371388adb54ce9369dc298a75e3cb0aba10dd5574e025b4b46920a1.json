{"ast":null,"code":"var _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/pages/auth/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { ToastContext } from '../../contexts/ToastContext';\nimport { GoogleLogin } from '@react-oauth/google';\nimport './AuthPages.css';\nimport loginBgImage from '../../assets/login-bg.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    login,\n    loginWithGoogle\n  } = useContext(AuthContext);\n  const {\n    showToast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      await login(email, password);\n      navigate('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to login. Please check your credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    console.log('Google login success:', credentialResponse);\n    try {\n      if (credentialResponse.credential) {\n        await loginWithGoogle(credentialResponse.credential);\n        navigate('/');\n      } else {\n        throw new Error('No credential received from Google');\n      }\n    } catch (err) {\n      console.error('Google login error:', err);\n      showToast('Google login failed. Please try again.', 'error');\n    }\n  };\n  const handleGoogleError = () => {\n    console.error('Google login failed');\n    showToast('Google login failed. Please try again.', 'error');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    style: {\n      backgroundImage: `url(${loginBgImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sign in to continue to SkillUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-full\",\n          disabled: loading,\n          children: loading ? 'Signing in...' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-divider\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-login-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleGoogleError,\n          useOneTap: true,\n          theme: \"outline\",\n          text: \"signin_with\",\n          shape: \"rectangular\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"gbbkX4+2Xqrfia3ZtSTUFZFUiFg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","Link","useNavigate","AuthContext","ToastContext","GoogleLogin","loginBgImage","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","login","loginWithGoogle","showToast","navigate","handleSubmit","e","preventDefault","err","_err$response","_err$response$data","console","response","data","message","handleGoogleSuccess","credentialResponse","log","credential","Error","handleGoogleError","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","onSuccess","onError","useOneTap","theme","text","shape","width","to","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/pages/auth/LoginPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { ToastContext } from '../../contexts/ToastContext';\nimport { GoogleLogin } from '@react-oauth/google';\nimport './AuthPages.css';\nimport loginBgImage from '../../assets/login-bg.jpg';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { login, loginWithGoogle } = useContext(AuthContext);\n  const { showToast } = useContext(ToastContext);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      await login(email, password);\n      navigate('/');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.response?.data?.message || 'Failed to login. Please check your credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    console.log('Google login success:', credentialResponse);\n    try {\n      if (credentialResponse.credential) {\n        await loginWithGoogle(credentialResponse.credential);\n        navigate('/');\n      } else {\n        throw new Error('No credential received from Google');\n      }\n    } catch (err) {\n      console.error('Google login error:', err);\n      showToast('Google login failed. Please try again.', 'error');\n    }\n  };\n\n  const handleGoogleError = () => {\n    console.error('Google login failed');\n    showToast('Google login failed. Please try again.', 'error');\n  };\n\n  return (\n    <div className=\"auth-container\" style={{ backgroundImage: `url(${loginBgImage})` }}>\n      <div className=\"auth-card\">\n        <div className=\"auth-header\">\n          <h2>Welcome Back</h2>\n          <p>Sign in to continue to SkillUp</p>\n        </div>\n\n        {error && <div className=\"auth-error\">{error}</div>}\n\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"form-control\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary w-full\"\n            disabled={loading}\n          >\n            {loading ? 'Signing in...' : 'Sign In'}\n          </button>\n        </form>\n\n        <div className=\"auth-divider\">\n          <span>OR</span>\n        </div>\n\n        <div className=\"google-login-container\">\n          <GoogleLogin\n            onSuccess={handleGoogleSuccess}\n            onError={handleGoogleError}\n            useOneTap\n            theme=\"outline\"\n            text=\"signin_with\"\n            shape=\"rectangular\"\n            width=\"100%\"\n          />\n        </div>\n\n        <div className=\"auth-footer\">\n          Don't have an account? <Link to=\"/register\">Sign Up</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}