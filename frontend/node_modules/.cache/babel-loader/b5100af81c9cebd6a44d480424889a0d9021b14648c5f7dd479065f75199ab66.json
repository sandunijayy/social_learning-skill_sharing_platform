{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get Auth0 authentication state and methods\n  const {\n    user: auth0User,\n    isAuthenticated: isAuth0Authenticated,\n    getAccessTokenSilently,\n    logout: auth0Logout,\n    isLoading: auth0Loading\n  } = useAuth0();\n\n  // Local authentication state\n  const isAuthenticated = !!token;\n\n  // Load user data when token changes\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Handle Auth0 authentication\n  useEffect(() => {\n    const handleAuth0Login = async () => {\n      if (isAuth0Authenticated && auth0User && !auth0Loading) {\n        try {\n          setLoading(true);\n\n          // Get Auth0 access token\n          const accessToken = await getAccessTokenSilently();\n\n          // Send token to backend for verification and user creation/retrieval\n          const response = await api.post(\"/api/auth/auth0\", {\n            token: accessToken,\n            email: auth0User.email,\n            name: auth0User.name,\n            picture: auth0User.picture\n          });\n\n          // Set authentication state\n          const {\n            token: backendToken,\n            user\n          } = response.data.data;\n          setToken(backendToken);\n          setAuthToken(backendToken);\n          setCurrentUser(user);\n          setError(null);\n          console.log(\"Auth0 authentication successful\");\n        } catch (err) {\n          console.error(\"Auth0 authentication error:\", err);\n          setError(\"Failed to authenticate with Google: \" + (err.message || \"Unknown error\"));\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    if (isAuth0Authenticated && !auth0Loading) {\n      handleAuth0Login();\n    }\n  }, [isAuth0Authenticated, auth0User, auth0Loading, getAccessTokenSilently]);\n\n  // Set or remove authentication token\n  const setAuthToken = token => {\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    }\n  };\n\n  // Parse JWT token\n  const parseJwt = token => {\n    try {\n      if (!token) return null;\n      const base64Url = token.split(\".\")[1];\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n      return JSON.parse(jsonPayload);\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e);\n      return null;\n    }\n  };\n\n  // Load user data from backend\n  const loadUser = async () => {\n    setLoading(true);\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      const tokenData = parseJwt(token);\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\");\n      const username = tokenData.sub;\n      const res = await api.get(`/api/users/${username}`);\n      setCurrentUser(res.data.data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error loading user:\", err);\n      setError(\"Failed to load user data\");\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login with username/email and password\n  const login = async credentials => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to login\");\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to login\"\n      };\n    }\n  };\n\n  // Register new user\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      console.error(\"Register error:\", err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to register\");\n      return {\n        success: false,\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to register\"\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setToken(null);\n    setCurrentUser(null);\n    setAuthToken(null);\n\n    // If authenticated with Auth0, also logout from Auth0\n    if (isAuth0Authenticated) {\n      auth0Logout({\n        returnTo: window.location.origin\n      });\n    }\n  };\n\n  // Update user profile\n  const updateUser = async userData => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData);\n      setCurrentUser(res.data.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data, _err$response6, _err$response6$data;\n      console.error(\"Update user error:\", err);\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to update user\");\n      return {\n        success: false,\n        error: ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Failed to update user\"\n      };\n    }\n  };\n\n  // Update current user data\n  const updateCurrentUser = user => {\n    setCurrentUser(user);\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated: isAuthenticated || isAuth0Authenticated,\n    loading: loading || auth0Loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"4vTIFO7jRvxpJoACSuXIyr9v9Hw=\", false, function () {\n  return [useAuth0];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","api","useAuth0","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","user","auth0User","isAuthenticated","isAuth0Authenticated","getAccessTokenSilently","logout","auth0Logout","isLoading","auth0Loading","loadUser","handleAuth0Login","accessToken","response","post","email","name","picture","backendToken","data","setAuthToken","console","log","err","message","setItem","defaults","headers","common","removeItem","parseJwt","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","tokenData","sub","Error","username","res","get","login","credentials","success","_err$response","_err$response$data","_err$response2","_err$response2$data","register","userData","_err$response3","_err$response3$data","_err$response4","_err$response4$data","returnTo","window","location","origin","updateUser","put","id","_err$response5","_err$response5$data","_err$response6","_err$response6$data","updateCurrentUser","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\nimport { api } from \"../utils/api\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst AuthContext = createContext()\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Get Auth0 authentication state and methods\n  const {\n    user: auth0User,\n    isAuthenticated: isAuth0Authenticated,\n    getAccessTokenSilently,\n    logout: auth0Logout,\n    isLoading: auth0Loading,\n  } = useAuth0()\n\n  // Local authentication state\n  const isAuthenticated = !!token\n\n  // Load user data when token changes\n  useEffect(() => {\n    if (token) {\n      loadUser()\n    } else {\n      setLoading(false)\n    }\n  }, [token])\n\n  // Handle Auth0 authentication\n  useEffect(() => {\n    const handleAuth0Login = async () => {\n      if (isAuth0Authenticated && auth0User && !auth0Loading) {\n        try {\n          setLoading(true)\n\n          // Get Auth0 access token\n          const accessToken = await getAccessTokenSilently()\n\n          // Send token to backend for verification and user creation/retrieval\n          const response = await api.post(\"/api/auth/auth0\", {\n            token: accessToken,\n            email: auth0User.email,\n            name: auth0User.name,\n            picture: auth0User.picture,\n          })\n\n          // Set authentication state\n          const { token: backendToken, user } = response.data.data\n          setToken(backendToken)\n          setAuthToken(backendToken)\n          setCurrentUser(user)\n          setError(null)\n\n          console.log(\"Auth0 authentication successful\")\n        } catch (err) {\n          console.error(\"Auth0 authentication error:\", err)\n          setError(\"Failed to authenticate with Google: \" + (err.message || \"Unknown error\"))\n        } finally {\n          setLoading(false)\n        }\n      }\n    }\n\n    if (isAuth0Authenticated && !auth0Loading) {\n      handleAuth0Login()\n    }\n  }, [isAuth0Authenticated, auth0User, auth0Loading, getAccessTokenSilently])\n\n  // Set or remove authentication token\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"token\", token)\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  // Parse JWT token\n  const parseJwt = (token) => {\n    try {\n      if (!token) return null\n      const base64Url = token.split(\".\")[1]\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\")\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n          .join(\"\"),\n      )\n      return JSON.parse(jsonPayload)\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e)\n      return null\n    }\n  }\n\n  // Load user data from backend\n  const loadUser = async () => {\n    setLoading(true)\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      const tokenData = parseJwt(token)\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\")\n      const username = tokenData.sub\n      const res = await api.get(`/api/users/${username}`)\n      setCurrentUser(res.data.data)\n      setError(null)\n    } catch (err) {\n      console.error(\"Error loading user:\", err)\n      setError(\"Failed to load user data\")\n      logout()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login with username/email and password\n  const login = async (credentials) => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials)\n      const { token, user } = res.data.data\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Login error:\", err)\n      setError(err.response?.data?.message || \"Failed to login\")\n      return { success: false, error: err.response?.data?.message || \"Failed to login\" }\n    }\n  }\n\n  // Register new user\n  const register = async (userData) => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData)\n      const { token, user } = res.data.data\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Register error:\", err)\n      setError(err.response?.data?.message || \"Failed to register\")\n      return { success: false, error: err.response?.data?.message || \"Failed to register\" }\n    }\n  }\n\n  // Logout user\n  const logout = () => {\n    setToken(null)\n    setCurrentUser(null)\n    setAuthToken(null)\n\n    // If authenticated with Auth0, also logout from Auth0\n    if (isAuth0Authenticated) {\n      auth0Logout({ returnTo: window.location.origin })\n    }\n  }\n\n  // Update user profile\n  const updateUser = async (userData) => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData)\n      setCurrentUser(res.data.data)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Update user error:\", err)\n      setError(err.response?.data?.message || \"Failed to update user\")\n      return { success: false, error: err.response?.data?.message || \"Failed to update user\" }\n    }\n  }\n\n  // Update current user data\n  const updateCurrentUser = (user) => {\n    setCurrentUser(user)\n  }\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated: isAuthenticated || isAuth0Authenticated,\n    loading: loading || auth0Loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}