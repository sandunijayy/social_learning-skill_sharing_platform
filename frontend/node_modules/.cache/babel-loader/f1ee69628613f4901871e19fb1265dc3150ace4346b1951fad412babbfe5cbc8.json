{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/pages/learning/LearningPlansListPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { api } from \"../../utils/api\";\nimport { useToast } from \"../../contexts/ToastContext\";\nimport { format } from \"date-fns\";\nimport \"./LearningPlanPages.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LearningPlansListPage = () => {\n  _s();\n  const [learningPlans, setLearningPlans] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    showToast\n  } = useToast();\n  useEffect(() => {\n    const fetchLearningPlans = async () => {\n      try {\n        setLoading(true);\n        const response = await api.get(\"/learning-plans\");\n        setLearningPlans(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching learning plans:\", error);\n        showToast(\"Failed to load learning plans\", \"error\");\n        setLoading(false);\n      }\n    };\n    fetchLearningPlans();\n  }, [showToast]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learning-plans-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"learning-plans-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Learning Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/learning-plans/create\",\n        className: \"create-plan-button\",\n        children: \"Create New Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading learning plans...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: learningPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-plans\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No learning plans found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/learning-plans/create\",\n            children: \"Create your first learning plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), \" to start organizing your educational journey.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"learning-plans-grid\",\n        children: learningPlans.map(plan => {\n          var _plan$topics, _plan$user, _plan$user2, _plan$user3;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/learning-plans/${plan.id}`,\n            className: \"learning-plan-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: plan.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan-description\",\n              children: plan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plan-topics\",\n                children: [((_plan$topics = plan.topics) === null || _plan$topics === void 0 ? void 0 : _plan$topics.length) || 0, \" topics\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plan-date\",\n                children: [\"Created \", format(new Date(plan.createdAt), \"MMM d, yyyy\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-creator\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_plan$user = plan.user) === null || _plan$user === void 0 ? void 0 : _plan$user.profileImage) || \"/default-avatar.png\",\n                alt: `${(_plan$user2 = plan.user) === null || _plan$user2 === void 0 ? void 0 : _plan$user2.username}'s avatar`,\n                className: \"creator-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_plan$user3 = plan.user) === null || _plan$user3 === void 0 ? void 0 : _plan$user3.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, plan.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LearningPlansListPage, \"R3QVU1zSvtvj7pk+R/NgJ6drF0g=\", false, function () {\n  return [useToast];\n});\n_c = LearningPlansListPage;\nexport default LearningPlansListPage;\nvar _c;\n$RefreshReg$(_c, \"LearningPlansListPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","Link","api","useToast","format","jsxDEV","_jsxDEV","Fragment","_Fragment","LearningPlansListPage","learningPlans","setLearningPlans","loading","setLoading","showToast","fetchLearningPlans","response","get","data","error","console","className","children","fileName","lineNumber","columnNumber","to","length","map","plan","_plan$topics","_plan$user","_plan$user2","_plan$user3","id","title","description","topics","Date","createdAt","src","user","profileImage","alt","username","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/pages/learning/LearningPlansListPage.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { api } from \"../../utils/api\"\nimport { useToast } from \"../../contexts/ToastContext\"\nimport { format } from \"date-fns\"\nimport \"./LearningPlanPages.css\"\n\nconst LearningPlansListPage = () => {\n  const [learningPlans, setLearningPlans] = useState([])\n  const [loading, setLoading] = useState(true)\n  const { showToast } = useToast()\n\n  useEffect(() => {\n    const fetchLearningPlans = async () => {\n      try {\n        setLoading(true)\n        const response = await api.get(\"/learning-plans\")\n        setLearningPlans(response.data)\n        setLoading(false)\n      } catch (error) {\n        console.error(\"Error fetching learning plans:\", error)\n        showToast(\"Failed to load learning plans\", \"error\")\n        setLoading(false)\n      }\n    }\n\n    fetchLearningPlans()\n  }, [showToast])\n\n  return (\n    <div className=\"learning-plans-list-container\">\n      <div className=\"learning-plans-header\">\n        <h1>Learning Plans</h1>\n        <Link to=\"/learning-plans/create\" className=\"create-plan-button\">\n          Create New Plan\n        </Link>\n      </div>\n\n      {loading ? (\n        <div className=\"loading\">Loading learning plans...</div>\n      ) : (\n        <>\n          {learningPlans.length === 0 ? (\n            <div className=\"no-plans\">\n              <p>No learning plans found.</p>\n              <p>\n                <Link to=\"/learning-plans/create\">Create your first learning plan</Link> to start organizing your\n                educational journey.\n              </p>\n            </div>\n          ) : (\n            <div className=\"learning-plans-grid\">\n              {learningPlans.map((plan) => (\n                <Link to={`/learning-plans/${plan.id}`} key={plan.id} className=\"learning-plan-card\">\n                  <h2>{plan.title}</h2>\n                  <p className=\"plan-description\">{plan.description}</p>\n                  <div className=\"plan-meta\">\n                    <span className=\"plan-topics\">{plan.topics?.length || 0} topics</span>\n                    <span className=\"plan-date\">Created {format(new Date(plan.createdAt), \"MMM d, yyyy\")}</span>\n                  </div>\n                  <div className=\"plan-creator\">\n                    <img\n                      src={plan.user?.profileImage || \"/default-avatar.png\"}\n                      alt={`${plan.user?.username}'s avatar`}\n                      className=\"creator-avatar\"\n                    />\n                    <span>{plan.user?.username}</span>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default LearningPlansListPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}