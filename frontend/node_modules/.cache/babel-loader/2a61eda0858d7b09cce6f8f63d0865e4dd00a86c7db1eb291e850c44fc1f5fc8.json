{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/components/media/MediaLoader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getPlaceholderImage } from \"../../utils/placeholderUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaLoader = ({\n  src,\n  alt,\n  className,\n  style = {},\n  type = \"IMAGE\",\n  withFallback = true\n}) => {\n  _s();\n  const [currentSrc, setCurrentSrc] = useState(src);\n  const [loadFailed, setLoadFailed] = useState(false);\n  const [attemptCount, setAttemptCount] = useState(0);\n  const [fallbackUsed, setFallbackUsed] = useState(false);\n\n  // Generate alternative URLs to try if the main one fails\n  const generateAlternatives = originalUrl => {\n    if (!originalUrl) return [];\n    const baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\n    const filename = originalUrl.split(\"/\").pop();\n    return [originalUrl, `${baseUrl}/uploads/${filename}`, `${baseUrl}/media/${filename}`, `${baseUrl}/images/${filename}`, `/uploads/${filename}`, `/media/${filename}`];\n  };\n  useEffect(() => {\n    // Reset state when source changes\n    setCurrentSrc(src);\n    setLoadFailed(false);\n    setAttemptCount(0);\n    setFallbackUsed(false);\n  }, [src]);\n  const handleError = e => {\n    console.error(`Image load error for ${currentSrc}`, e);\n    if (!withFallback) {\n      setLoadFailed(true);\n      return;\n    }\n\n    // Try alternative URLs\n    const alternatives = generateAlternatives(src);\n    const nextAttempt = attemptCount + 1;\n    if (nextAttempt < alternatives.length) {\n      console.log(`Trying alternative URL ${nextAttempt}: ${alternatives[nextAttempt]}`);\n      setCurrentSrc(alternatives[nextAttempt]);\n      setAttemptCount(nextAttempt);\n      setFallbackUsed(true);\n    } else {\n      console.log(\"All alternatives failed, using placeholder\");\n      setCurrentSrc(getPlaceholderImage(300, 300, \"Image failed to load\"));\n      setLoadFailed(true);\n      setFallbackUsed(true);\n    }\n  };\n  const combinedStyle = {\n    ...style,\n    maxWidth: \"100%\",\n    height: \"auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `media-loader ${loadFailed ? \"media-load-failed\" : \"\"}`,\n    children: [fallbackUsed && !loadFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fallback-notice\",\n      style: {\n        fontSize: \"10px\",\n        color: \"#888\",\n        marginBottom: \"4px\"\n      },\n      children: \"Using alternative source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), type === \"IMAGE\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentSrc || \"/placeholder.svg\",\n      alt: alt || \"Media content\",\n      className: className || \"media-image\",\n      style: combinedStyle,\n      onError: handleError,\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : type === \"VIDEO\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      className: className || \"media-video\",\n      style: combinedStyle,\n      onError: handleError,\n      crossOrigin: \"anonymous\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: currentSrc,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unsupported-media\",\n      style: {\n        padding: \"20px\",\n        textAlign: \"center\",\n        backgroundColor: \"#f0f0f0\"\n      },\n      children: \"Unsupported media type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), loadFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-error-overlay\",\n      style: {\n        marginTop: \"5px\",\n        padding: \"10px\",\n        backgroundColor: \"#f8d7da\",\n        color: \"#721c24\",\n        borderRadius: \"4px\",\n        fontSize: \"14px\",\n        textAlign: \"center\"\n      },\n      children: \"Failed to load media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaLoader, \"CXkYdE9ZHcXzyciBnv64GC/Oyb0=\");\n_c = MediaLoader;\nexport default MediaLoader;\nvar _c;\n$RefreshReg$(_c, \"MediaLoader\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","getPlaceholderImage","jsxDEV","_jsxDEV","MediaLoader","src","alt","className","style","type","withFallback","currentSrc","setCurrentSrc","loadFailed","setLoadFailed","attemptCount","setAttemptCount","fallbackUsed","setFallbackUsed","generateAlternatives","originalUrl","baseUrl","process","env","REACT_APP_API_URL","filename","split","pop","handleError","e","console","error","alternatives","nextAttempt","length","log","combinedStyle","maxWidth","height","children","fontSize","color","marginBottom","fileName","lineNumber","columnNumber","onError","crossOrigin","controls","padding","textAlign","backgroundColor","marginTop","borderRadius","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/components/media/MediaLoader.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { getPlaceholderImage } from \"../../utils/placeholderUtils\"\n\nconst MediaLoader = ({ src, alt, className, style = {}, type = \"IMAGE\", withFallback = true }) => {\n  const [currentSrc, setCurrentSrc] = useState(src)\n  const [loadFailed, setLoadFailed] = useState(false)\n  const [attemptCount, setAttemptCount] = useState(0)\n  const [fallbackUsed, setFallbackUsed] = useState(false)\n\n  // Generate alternative URLs to try if the main one fails\n  const generateAlternatives = (originalUrl) => {\n    if (!originalUrl) return []\n\n    const baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:8080\"\n    const filename = originalUrl.split(\"/\").pop()\n\n    return [\n      originalUrl,\n      `${baseUrl}/uploads/${filename}`,\n      `${baseUrl}/media/${filename}`,\n      `${baseUrl}/images/${filename}`,\n      `/uploads/${filename}`,\n      `/media/${filename}`,\n    ]\n  }\n\n  useEffect(() => {\n    // Reset state when source changes\n    setCurrentSrc(src)\n    setLoadFailed(false)\n    setAttemptCount(0)\n    setFallbackUsed(false)\n  }, [src])\n\n  const handleError = (e) => {\n    console.error(`Image load error for ${currentSrc}`, e)\n\n    if (!withFallback) {\n      setLoadFailed(true)\n      return\n    }\n\n    // Try alternative URLs\n    const alternatives = generateAlternatives(src)\n    const nextAttempt = attemptCount + 1\n\n    if (nextAttempt < alternatives.length) {\n      console.log(`Trying alternative URL ${nextAttempt}: ${alternatives[nextAttempt]}`)\n      setCurrentSrc(alternatives[nextAttempt])\n      setAttemptCount(nextAttempt)\n      setFallbackUsed(true)\n    } else {\n      console.log(\"All alternatives failed, using placeholder\")\n      setCurrentSrc(getPlaceholderImage(300, 300, \"Image failed to load\"))\n      setLoadFailed(true)\n      setFallbackUsed(true)\n    }\n  }\n\n  const combinedStyle = {\n    ...style,\n    maxWidth: \"100%\",\n    height: \"auto\",\n  }\n\n  return (\n    <div className={`media-loader ${loadFailed ? \"media-load-failed\" : \"\"}`}>\n      {fallbackUsed && !loadFailed && (\n        <div className=\"fallback-notice\" style={{ fontSize: \"10px\", color: \"#888\", marginBottom: \"4px\" }}>\n          Using alternative source\n        </div>\n      )}\n\n      {type === \"IMAGE\" ? (\n        <img\n          src={currentSrc || \"/placeholder.svg\"}\n          alt={alt || \"Media content\"}\n          className={className || \"media-image\"}\n          style={combinedStyle}\n          onError={handleError}\n          crossOrigin=\"anonymous\"\n        />\n      ) : type === \"VIDEO\" ? (\n        <video\n          controls\n          className={className || \"media-video\"}\n          style={combinedStyle}\n          onError={handleError}\n          crossOrigin=\"anonymous\"\n        >\n          <source src={currentSrc} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n      ) : (\n        <div className=\"unsupported-media\" style={{ padding: \"20px\", textAlign: \"center\", backgroundColor: \"#f0f0f0\" }}>\n          Unsupported media type\n        </div>\n      )}\n\n      {loadFailed && (\n        <div\n          className=\"media-error-overlay\"\n          style={{\n            marginTop: \"5px\",\n            padding: \"10px\",\n            backgroundColor: \"#f8d7da\",\n            color: \"#721c24\",\n            borderRadius: \"4px\",\n            fontSize: \"14px\",\n            textAlign: \"center\",\n          }}\n        >\n          Failed to load media\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default MediaLoader\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}