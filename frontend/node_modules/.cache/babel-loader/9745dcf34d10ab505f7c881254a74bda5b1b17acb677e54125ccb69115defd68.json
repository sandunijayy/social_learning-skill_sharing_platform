{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const isAuthenticated = !!token;\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const setAuthToken = token => {\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  const loadUser = async () => {\n    setLoading(true);\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      const tokenData = parseJwt(token);\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\");\n      const username = tokenData.sub;\n      const res = await api.get(`/api/users/${username}`);\n      setCurrentUser(res.data.data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error loading user:\", err);\n      setError(\"Failed to load user data\");\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to login\";\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Register error:\", err);\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to register\";\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setCurrentUser(null);\n    setAuthToken(null);\n  };\n  const updateUser = async userData => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData);\n      setCurrentUser(res.data.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      console.error(\"Update user error:\", err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to update user\");\n      return {\n        success: false,\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to update user\"\n      };\n    }\n  };\n  const updateCurrentUser = user => {\n    setCurrentUser(user);\n  };\n  const parseJwt = token => {\n    try {\n      if (!token) return null;\n      const base64Url = token.split(\".\")[1];\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n      return JSON.parse(jsonPayload);\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e);\n      return null;\n    }\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser // âœ… Add this to context\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"QsNnfz6lW2Yojub9Hdomz7n9WEY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","isAuthenticated","loadUser","setAuthToken","setItem","defaults","headers","common","removeItem","tokenData","parseJwt","sub","Error","username","res","get","data","err","console","logout","login","credentials","post","user","success","_err$response","_err$response$data","errorMessage","response","message","register","userData","_err$response2","_err$response2$data","updateUser","put","id","_err$response3","_err$response3$data","_err$response4","_err$response4$data","updateCurrentUser","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\nimport { api } from \"../utils/api\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  const isAuthenticated = !!token\n\n  useEffect(() => {\n    if (token) {\n      loadUser()\n    } else {\n      setLoading(false)\n    }\n  }, [token])\n\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"token\", token)\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  const loadUser = async () => {\n    setLoading(true)\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      const tokenData = parseJwt(token)\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\")\n      const username = tokenData.sub\n      const res = await api.get(`/api/users/${username}`)\n      setCurrentUser(res.data.data)\n      setError(null)\n    } catch (err) {\n      console.error(\"Error loading user:\", err)\n      setError(\"Failed to load user data\")\n      logout()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const login = async (credentials) => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials)\n      const { token, user } = res.data.data\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Login error:\", err)\n      const errorMessage = err.response?.data?.message || \"Failed to login\"\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData)\n      const { token, user } = res.data.data\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Register error:\", err)\n      const errorMessage = err.response?.data?.message || \"Failed to register\"\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }\n\n  const logout = () => {\n    setToken(null)\n    setCurrentUser(null)\n    setAuthToken(null)\n  }\n\n  const updateUser = async (userData) => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData)\n      setCurrentUser(res.data.data)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Update user error:\", err)\n      setError(err.response?.data?.message || \"Failed to update user\")\n      return { success: false, error: err.response?.data?.message || \"Failed to update user\" }\n    }\n  }\n\n  const updateCurrentUser = (user) => {\n    setCurrentUser(user)\n  }\n\n  const parseJwt = (token) => {\n    try {\n      if (!token) return null\n      const base64Url = token.split(\".\")[1]\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\")\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n          .join(\"\"),\n      )\n      return JSON.parse(jsonPayload)\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e)\n      return null\n    }\n  }\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser, // âœ… Add this to context\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}