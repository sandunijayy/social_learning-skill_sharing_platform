{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\PAF-Project-main\\\\PAF-Project-main\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const isAuthenticated = !!token;\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const setAuthToken = token => {\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  const loadUser = async () => {\n    setLoading(true);\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      const tokenData = parseJwt(token);\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\");\n      const username = tokenData.sub;\n      const res = await api.get(`/api/users/${username}`);\n      setCurrentUser(res.data.data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error loading user:\", err);\n      setError(\"Failed to load user data\");\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      var _res$data;\n      const res = await api.post(\"/api/auth/login\", credentials, {\n        withCredentials: true,\n        // Add this line\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.success) {\n        const {\n          token,\n          user\n        } = res.data.data;\n        setToken(token);\n        setAuthToken(token);\n        setCurrentUser(user);\n        setError(null);\n        return {\n          success: true\n        };\n      } else {\n        var _res$data2;\n        throw new Error(((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) || 'Login failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to login\";\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      console.error(\"Register error:\", err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to register\");\n      return {\n        success: false,\n        error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to register\"\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setCurrentUser(null);\n    setAuthToken(null);\n  };\n  const updateUser = async userData => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData);\n      setCurrentUser(res.data.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n      console.error(\"Update user error:\", err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to update user\");\n      return {\n        success: false,\n        error: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to update user\"\n      };\n    }\n  };\n  const updateCurrentUser = user => {\n    setCurrentUser(user);\n  };\n  const parseJwt = token => {\n    try {\n      if (!token) return null;\n      const base64Url = token.split(\".\")[1];\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n      return JSON.parse(jsonPayload);\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e);\n      return null;\n    }\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser // âœ… Add this to context\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"QsNnfz6lW2Yojub9Hdomz7n9WEY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","isAuthenticated","loadUser","setAuthToken","setItem","defaults","headers","common","removeItem","tokenData","parseJwt","sub","Error","username","res","get","data","err","console","logout","login","credentials","_res$data","post","withCredentials","success","user","_res$data2","message","_err$response","_err$response$data","errorMessage","response","register","userData","_err$response2","_err$response2$data","_err$response3","_err$response3$data","updateUser","put","id","_err$response4","_err$response4$data","_err$response5","_err$response5$data","updateCurrentUser","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/PAF-Project-main/PAF-Project-main/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\nimport { api } from \"../utils/api\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  const isAuthenticated = !!token\n\n  useEffect(() => {\n    if (token) {\n      loadUser()\n    } else {\n      setLoading(false)\n    }\n  }, [token])\n\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"token\", token)\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  const loadUser = async () => {\n    setLoading(true)\n    try {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      const tokenData = parseJwt(token)\n      if (!tokenData || !tokenData.sub) throw new Error(\"Invalid token\")\n      const username = tokenData.sub\n      const res = await api.get(`/api/users/${username}`)\n      setCurrentUser(res.data.data)\n      setError(null)\n    } catch (err) {\n      console.error(\"Error loading user:\", err)\n      setError(\"Failed to load user data\")\n      logout()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const login = async (credentials) => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials, {\n        withCredentials: true,  // Add this line\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        }\n      });\n      \n      if (res.data?.success) {\n        const { token, user } = res.data.data;\n        setToken(token);\n        setAuthToken(token);\n        setCurrentUser(user);\n        setError(null);\n        return { success: true };\n      } else {\n        throw new Error(res.data?.message || 'Login failed');\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      const errorMessage = err.response?.data?.message || \"Failed to login\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData)\n      const { token, user } = res.data.data\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Register error:\", err)\n      setError(err.response?.data?.message || \"Failed to register\")\n      return { success: false, error: err.response?.data?.message || \"Failed to register\" }\n    }\n  }\n\n  const logout = () => {\n    setToken(null)\n    setCurrentUser(null)\n    setAuthToken(null)\n  }\n\n  const updateUser = async (userData) => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData)\n      setCurrentUser(res.data.data)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Update user error:\", err)\n      setError(err.response?.data?.message || \"Failed to update user\")\n      return { success: false, error: err.response?.data?.message || \"Failed to update user\" }\n    }\n  }\n\n  const updateCurrentUser = (user) => {\n    setCurrentUser(user)\n  }\n\n  const parseJwt = (token) => {\n    try {\n      if (!token) return null\n      const base64Url = token.split(\".\")[1]\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\")\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n          .join(\"\"),\n      )\n      return JSON.parse(jsonPayload)\n    } catch (e) {\n      console.error(\"Error parsing JWT:\", e)\n      return null\n    }\n  }\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n    updateCurrentUser, // âœ… Add this to context\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}