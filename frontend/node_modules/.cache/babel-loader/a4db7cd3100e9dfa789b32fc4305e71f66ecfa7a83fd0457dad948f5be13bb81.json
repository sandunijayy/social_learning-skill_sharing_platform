{"ast":null,"code":"var _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/components/debug/MediaDebugger.js\";\nimport { getPlaceholderImage, handleImageError } from \"../../utils/placeholderUtils\";\n\n/**\n * A component to debug media URLs and display issues\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaDebugger = ({\n  media\n}) => {\n  if (!media || !Array.isArray(media) || media.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-debugger\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Media Debug Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No media available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-debugger\",\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"10px\",\n      margin: \"10px 0\",\n      backgroundColor: \"#f8f9fa\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Media Debug Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), media.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Media #\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", item.id || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", item.type || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"URL: \", item.url || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Full URL: \", window.location.origin + item.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Test Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url || getPlaceholderImage(200, 200, \"Test Image\"),\n          alt: `Test ${index}`,\n          style: {\n            maxWidth: \"200px\",\n            border: \"1px dashed red\"\n          },\n          onError: e => handleImageError(e, 200, 200, \"Test image failed to load\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = MediaDebugger;\nexport default MediaDebugger;\nvar _c;\n$RefreshReg$(_c, \"MediaDebugger\");","map":{"version":3,"names":["getPlaceholderImage","handleImageError","jsxDEV","_jsxDEV","MediaDebugger","media","Array","isArray","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","margin","backgroundColor","map","item","index","marginBottom","id","type","url","window","location","origin","src","alt","maxWidth","onError","e","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/components/debug/MediaDebugger.js"],"sourcesContent":["import { getPlaceholderImage, handleImageError } from \"../../utils/placeholderUtils\"\n\n/**\n * A component to debug media URLs and display issues\n */\nconst MediaDebugger = ({ media }) => {\n  if (!media || !Array.isArray(media) || media.length === 0) {\n    return (\n      <div className=\"media-debugger\">\n        <h4>Media Debug Info</h4>\n        <p>No media available</p>\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className=\"media-debugger\"\n      style={{\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        margin: \"10px 0\",\n        backgroundColor: \"#f8f9fa\",\n      }}\n    >\n      <h4>Media Debug Info</h4>\n      {media.map((item, index) => (\n        <div key={index} style={{ marginBottom: \"10px\" }}>\n          <p>\n            <strong>Media #{index + 1}</strong>\n          </p>\n          <p>ID: {item.id || \"N/A\"}</p>\n          <p>Type: {item.type || \"N/A\"}</p>\n          <p>URL: {item.url || \"N/A\"}</p>\n          <p>Full URL: {window.location.origin + item.url}</p>\n          <div>\n            <p>Test Image:</p>\n            <img\n              src={item.url || getPlaceholderImage(200, 200, \"Test Image\")}\n              alt={`Test ${index}`}\n              style={{ maxWidth: \"200px\", border: \"1px dashed red\" }}\n              onError={(e) => handleImageError(e, 200, 200, \"Test image failed to load\")}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MediaDebugger\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}