{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token;\n  useEffect(() => {\n    // If token exists, load user data\n    if (token) {\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Set token in localStorage and axios headers\n  const setAuthToken = token => {\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    }\n  };\n\n  // Load user data using token\n  const loadUser = async () => {\n    setLoading(true);\n    try {\n      // Set token in axios headers\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      // Get current user's username from the token\n      const username = parseJwt(token).sub;\n\n      // Get user data by username\n      const res = await api.get(`/api/users/${username}`);\n      setCurrentUser(res.data.data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error loading user:\", err);\n      setError(\"Failed to load user data\");\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to login\");\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to login\"\n      };\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData);\n      const {\n        token,\n        user\n      } = res.data.data;\n      setToken(token);\n      setAuthToken(token);\n      setCurrentUser(user);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      console.error(\"Register error:\", err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to register\");\n      return {\n        success: false,\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to register\"\n      };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setToken(null);\n    setCurrentUser(null);\n    setAuthToken(null);\n  };\n\n  // Update user info\n  const updateUser = async userData => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData);\n      setCurrentUser(res.data.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data, _err$response6, _err$response6$data;\n      console.error(\"Update user error:\", err);\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to update user\");\n      return {\n        success: false,\n        error: ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Failed to update user\"\n      };\n    }\n  };\n\n  // Parse JWT to get user info\n  const parseJwt = token => {\n    try {\n      return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n      return null;\n    }\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"QsNnfz6lW2Yojub9Hdomz7n9WEY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","isAuthenticated","loadUser","setAuthToken","setItem","defaults","headers","common","removeItem","username","parseJwt","sub","res","get","data","err","console","logout","login","credentials","post","user","success","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","register","userData","_err$response3","_err$response3$data","_err$response4","_err$response4$data","updateUser","put","id","_err$response5","_err$response5$data","_err$response6","_err$response6$data","JSON","parse","atob","split","e","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pereraw.b.n/PAF project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\nimport { api } from \"../utils/api\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token\n\n  useEffect(() => {\n    // If token exists, load user data\n    if (token) {\n      loadUser()\n    } else {\n      setLoading(false)\n    }\n  }, [token])\n\n  // Set token in localStorage and axios headers\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"token\", token)\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  // Load user data using token\n  const loadUser = async () => {\n    setLoading(true)\n    try {\n      // Set token in axios headers\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n      // Get current user's username from the token\n      const username = parseJwt(token).sub\n\n      // Get user data by username\n      const res = await api.get(`/api/users/${username}`)\n      setCurrentUser(res.data.data)\n      setError(null)\n    } catch (err) {\n      console.error(\"Error loading user:\", err)\n      setError(\"Failed to load user data\")\n      logout()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login user\n  const login = async (credentials) => {\n    try {\n      const res = await api.post(\"/api/auth/login\", credentials)\n      const { token, user } = res.data.data\n\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Login error:\", err)\n      setError(err.response?.data?.message || \"Failed to login\")\n      return { success: false, error: err.response?.data?.message || \"Failed to login\" }\n    }\n  }\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      const res = await api.post(\"/api/auth/register\", userData)\n      const { token, user } = res.data.data\n\n      setToken(token)\n      setAuthToken(token)\n      setCurrentUser(user)\n      setError(null)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Register error:\", err)\n      setError(err.response?.data?.message || \"Failed to register\")\n      return { success: false, error: err.response?.data?.message || \"Failed to register\" }\n    }\n  }\n\n  // Logout user\n  const logout = () => {\n    setToken(null)\n    setCurrentUser(null)\n    setAuthToken(null)\n  }\n\n  // Update user info\n  const updateUser = async (userData) => {\n    try {\n      const res = await api.put(`/api/users/${currentUser.id}`, userData)\n      setCurrentUser(res.data.data)\n      return { success: true }\n    } catch (err) {\n      console.error(\"Update user error:\", err)\n      setError(err.response?.data?.message || \"Failed to update user\")\n      return { success: false, error: err.response?.data?.message || \"Failed to update user\" }\n    }\n  }\n\n  // Parse JWT to get user info\n  const parseJwt = (token) => {\n    try {\n      return JSON.parse(atob(token.split(\".\")[1]))\n    } catch (e) {\n      return null\n    }\n  }\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUser,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}